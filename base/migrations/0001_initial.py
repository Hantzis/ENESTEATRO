# Generated by Django 2.2.9 on 2020-01-07 21:04

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Archivo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archivo_nombre', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fecha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Fondo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fondo_nombre', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lugar',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lugar_nombre', models.CharField(max_length=255, unique=True)),
                ('lugar_geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Ramo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ramo_nombre', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Registro',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('libro', models.PositiveIntegerField(blank=True, null=True)),
                ('foja', models.CharField(blank=True, max_length=255, null=True)),
                ('caja', models.CharField(blank=True, max_length=255, null=True)),
                ('expediente', models.CharField(blank=True, max_length=255, null=True)),
                ('encabezados', models.TextField(blank=True, null=True)),
                ('notas', models.TextField(blank=True, null=True)),
                ('transcripcion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('archivo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Archivo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('taggit.tag',),
        ),
        migrations.CreateModel(
            name='RegistroEtiqueta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='registro_etiquetas', to='base.Registro')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_registroetiqueta_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='registro',
            name='etiquetas',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='base.RegistroEtiqueta', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='registro',
            name='fechas',
            field=models.ManyToManyField(blank=True, null=True, to='base.Fecha'),
        ),
        migrations.AddField(
            model_name='registro',
            name='fondo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Fondo'),
        ),
        migrations.AddField(
            model_name='registro',
            name='lugar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Lugar'),
        ),
        migrations.AddField(
            model_name='registro',
            name='ramos',
            field=models.ManyToManyField(blank=True, null=True, to='base.Ramo'),
        ),
        migrations.AddField(
            model_name='registro',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
